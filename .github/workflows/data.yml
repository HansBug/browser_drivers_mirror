name: Sync From Official Site

permissions:
  contents: write

on:
  push:
  workflow_dispatch:

jobs:
  data_crawl:
    name: Data Crawl
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - 'ubuntu-latest'
        python-version:
          - '3.8'
        browser:
          #          - 'edge'
          - 'google'

    steps:
      - name: Get system version for Linux
        if: ${{ contains(matrix.os, 'ubuntu') }}
        shell: bash
        run: |
          echo "OS_NAME=Linux" >> $GITHUB_ENV
          echo "IS_WIN=" >> $GITHUB_ENV
          echo "IS_MAC=" >> $GITHUB_ENV
      - name: Set environment for Cpython
        if: ${{ !contains(matrix.python-version, 'pypy') }}
        shell: bash
        run: |
          echo "IS_PYPY=" >> $GITHUB_ENV
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 20
          submodules: 'recursive'
      - name: Set up system dependences on Linux
        if: ${{ env.OS_NAME == 'Linux' }}
        shell: bash
        run: |
          sudo apt-get update
          sudo apt-get install -y tree cloc wget curl make zip
      - name: Set up python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        shell: bash
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade flake8 setuptools wheel twine
          pip install -r requirements.txt
      - name: Test the basic environment
        shell: bash
        run: |
          python -V
          pip --version
          pip list
          tree .
      - name: Crawl dataset from internet
        uses: nick-fields/retry@v2
        env:
          CI: 'true'
        with:
          shell: bash
          timeout_minutes: 180
          max_attempts: 5
          retry_on: any
          command: |
            python -m mirror.${{ matrix.browser }} download -O ./${{ matrix.browser }} && \
              tree ./browser_drivers_mirror
      - name: Transform models to onnx format
        run: |
          ls -al ./${{ matrix.browser }}
          zip -r ${{ matrix.browser }}.zip ${{ matrix.browser }}
      - name: Upload the character databases
        uses: actions/upload-artifact@v3
        with:
          name: downloaded_drivers
          path: ${{ matrix.browser }}.zip

  data_upload:
    name: Data Upload
    runs-on: ${{ matrix.os }}
    needs:
      - data_crawl
    strategy:
      fail-fast: false
      matrix:
        os:
          - 'ubuntu-latest'
        python-version:
          - '3.8'

    steps:
      - name: Prepare the repository
        shell: bash
        run: |
          sudo apt-get install -y tree
          git lfs install
          git clone https://huggingface.co/HansBug/browser_drivers_mirror
          ls -al browser_drivers_mirror
      - name: Download from artifact
        uses: actions/download-artifact@v3
        with:
          name: downloaded_drivers
          path: browser_drivers_mirror
      - name: See what is in this path
        shell: bash
        run: |
          cd browser_drivers_mirror
          for zfile in *.zip; do unzip -o $zfile; done
          rm -rf *.zip
          tree .
      - name: Push data to hugging face repository
        env:
          HF_TOKEN: ${{ secrets.HF_HANSBUG_TOKEN }}
        run: |
          cd browser_drivers_mirror
          git config user.name 'hansbug'
          git config user.email 'hansbug@buaa.edu.cn'
          git add -A
          git diff-index --quiet HEAD || git commit -a -m "dev(hansbug): mirror sync $(date -R)"
          git push https://hansbug:$HF_TOKEN@huggingface.co/HansBug/browser_drivers_mirror main
