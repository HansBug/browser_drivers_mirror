name: Sync From Official Site

permissions:
  contents: write

on:
  #  push:
  workflow_dispatch:
  schedule:
    - cron: '30 16 * * *'

jobs:
  data_crawl:
    name: Data Crawl
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - 'ubuntu-latest'
        python-version:
          - '3.8'
        browser:
          - 'edge'
          - 'google'
          - 'ie'
          - 'opera'
          - 'firefox'

    steps:
      - name: Get system version for Linux
        if: ${{ contains(matrix.os, 'ubuntu') }}
        shell: bash
        run: |
          echo "OS_NAME=Linux" >> $GITHUB_ENV
          echo "IS_WIN=" >> $GITHUB_ENV
          echo "IS_MAC=" >> $GITHUB_ENV
      - name: Set environment for Cpython
        if: ${{ !contains(matrix.python-version, 'pypy') }}
        shell: bash
        run: |
          echo "IS_PYPY=" >> $GITHUB_ENV
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 20
          submodules: 'recursive'
      - name: Set up system dependencies on Linux
        if: ${{ env.OS_NAME == 'Linux' }}
        shell: bash
        run: |
          sudo apt-get update
          sudo apt-get install -y tree cloc wget curl make zip
      - name: Set up python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        shell: bash
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade flake8 setuptools wheel twine
          pip install -r requirements.txt
      - name: Test the basic environment
        shell: bash
        run: |
          python -V
          pip --version
          pip list
          tree .
      - name: Crawl dataset from internet
        uses: nick-fields/retry@v2
        env:
          CI: 'true'
          GITHUB_ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
          HF_TOKEN: ${{ secrets.HF_HANSBUG_TOKEN }}
        with:
          shell: bash
          timeout_minutes: 180
          max_attempts: 5
          retry_on: any
          command: |
            python -m mirror.${{ matrix.browser }} trans

  badge_create:
    name: Badge Create
    runs-on: ${{ matrix.os }}
    needs:
      - data_crawl
    strategy:
      fail-fast: false
      matrix:
        os:
          - 'ubuntu-latest'
        python-version:
          - '3.8'

    steps:
      - name: Get the Timestamp
        run: |
          echo "UPDATE_DATE=$(date +'%Y-%m-%d %H:%M %Z')" >> $GITHUB_ENV
      - name: Create Update Time Badge
        uses: schneegans/dynamic-badges-action@v1.0.0
        with:
          auth: ${{ secrets.GIST_SECRET }}
          gistID: ${{ secrets.BADGE_GIST_ID }}
          filename: data_last_update.json
          label: Data Updated
          message: ${{ env.UPDATE_DATE }}
          color: yellowgreen

  update_github_readme:
    name: Main Sync
    runs-on: ${{ matrix.os }}
    needs:
      - data_crawl
    strategy:
      fail-fast: false
      matrix:
        os:
          - 'ubuntu-latest'
        python-version:
          - '3.7'

    steps:
      - name: Get system version for Linux
        if: ${{ contains(matrix.os, 'ubuntu') }}
        shell: bash
        run: |
          echo "OS_NAME=Linux" >> $GITHUB_ENV
          echo "IS_WIN=" >> $GITHUB_ENV
          echo "IS_MAC=" >> $GITHUB_ENV
      - name: Set environment for Cpython
        if: ${{ !contains(matrix.python-version, 'pypy') }}
        shell: bash
        run: |
          echo "IS_PYPY=" >> $GITHUB_ENV
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 20
          submodules: 'recursive'
      - name: Set up system dependencies on Linux
        if: ${{ env.OS_NAME == 'Linux' }}
        shell: bash
        run: |
          sudo apt-get update
          sudo apt-get install -y tree cloc wget curl make zip
      - name: Set up python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        shell: bash
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade flake8 setuptools wheel twine
          pip install -r requirements.txt
      - name: Test the basic environment
        shell: bash
        run: |
          python -V
          pip --version
          pip list
          tree .
      - name: Sync README to Github
        uses: nick-fields/retry@v2
        env:
          CI: 'true'
          HF_TOKEN: ${{ secrets.HF_HANSBUG_TOKEN }}
        with:
          shell: bash
          timeout_minutes: 20
          max_attempts: 3
          retry_on: error
          command: |
            python -m mirror readme
      - name: Change Commit
        id: commit
        run: |
          git config user.name 'hansbug'
          git config user.email 'hansbug@buaa.edu.cn'
          git add -A
          git diff-index --quiet HEAD || git commit -a -m "dev(hansbug): auto sync $(date -R)"
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

  update_huggingface_readme:
    name: Huggingface Sync
    runs-on: ${{ matrix.os }}
    needs:
      - data_crawl
    strategy:
      fail-fast: false
      matrix:
        os:
          - 'ubuntu-latest'
        python-version:
          - '3.7'

    steps:
      - name: Get system version for Linux
        if: ${{ contains(matrix.os, 'ubuntu') }}
        shell: bash
        run: |
          echo "OS_NAME=Linux" >> $GITHUB_ENV
          echo "IS_WIN=" >> $GITHUB_ENV
          echo "IS_MAC=" >> $GITHUB_ENV
      - name: Set environment for Cpython
        if: ${{ !contains(matrix.python-version, 'pypy') }}
        shell: bash
        run: |
          echo "IS_PYPY=" >> $GITHUB_ENV
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 20
          submodules: 'recursive'
      - name: Set up system dependencies on Linux
        if: ${{ env.OS_NAME == 'Linux' }}
        shell: bash
        run: |
          sudo apt-get update
          sudo apt-get install -y tree cloc wget curl make zip
      - name: Set up python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        shell: bash
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade flake8 setuptools wheel twine
          pip install -r requirements.txt
      - name: Test the basic environment
        shell: bash
        run: |
          python -V
          pip --version
          pip list
          tree .
      - name: Sync README to HuggingFace
        uses: nick-fields/retry@v2
        env:
          CI: 'true'
          HF_TOKEN: ${{ secrets.HF_HANSBUG_TOKEN }}
        with:
          shell: bash
          timeout_minutes: 20
          max_attempts: 3
          retry_on: error
          command: |
            python -m mirror readme -H -o README.hf.md && \
            python -m mirror hf_readme -i README.hf.md
